{"version":3,"sources":["hooks/useForm.js","redux-modules/utils/createSliceWithRoutines.js","redux-modules/habits/habitsSlice.js","redux-modules/habits/hooks/useCreateHabit.js","redux-modules/session/selectors/sessionSliceSelector.js","redux-modules/session/selectors/isLoggedInSelector.js","hooks/useLoggedIn.js","ui/molecules/dialogs/CreateHabitDialog.tsx","hooks/useToggle.js","redux-modules/session/sessionSlice.js","redux-modules/session/hooks/useLogout.js","ui/atoms/themeProvider/ThemeProvider.js","ui/atoms/navigation/NavBar.js","redux-modules/session/hooks/useLogin.js","ui/pages/session/SignIn.tsx","redux-modules/session/hooks/useCreateUser.js","ui/pages/session/SignUp.tsx","ui/pages/ProfilePage.tsx","hooks/useAuthPersistence.js","ui/atoms/route/AuthRoute.js","ui/atoms/route/UnAuthRoute.js","redux-modules/habits/selectors/habitIdsSelectors.js","redux-modules/habits/hooks/useHabitIds.js","ui/molecules/calendar/calculateWeeksInMonth.js","ui/molecules/calendar/Week.js","redux-modules/habits/selectors/habitsSliceSelector.js","redux-modules/habits/selectors/habitSelector.js","redux-modules/habits/hooks/useHabit.js","ui/molecules/calendar/Calendar.js","ui/molecules/calendar/MonthNav.js","redux-modules/habits/hooks/useDeleteHabit.js","redux-modules/habits/hooks/useUpdateHabit.js","ui/molecules/dialogs/RenameHabitDialog.tsx","ui/molecules/dialogs/DeleteHabitDialog.tsx","ui/molecules/habit/HabitOptions.tsx","redux-modules/habits/hooks/useSwapHabit.js","ui/molecules/habit/HabitDropZone.tsx","ui/molecules/habit/Habit.tsx","ui/molecules/habits/Habits.tsx","ui/pages/LandingPage.tsx","App.tsx","serviceWorker.ts","firebase/firebase.js","firebase/users/loginUser.js","redux-modules/session/sagas/loginSaga.js","firebase/users/createUser.js","redux-modules/session/sagas/createUserSaga.js","firebase/users/logoutUser.js","redux-modules/session/sagas/logoutSaga.js","redux-modules/session/selectors/currentUserIdSelector.js","redux-modules/session/sagas/subcribeToUserSettingsSaga.js","redux-modules/session/sagas/sessionSagas.js","firebase/habits/createHabit.js","redux-modules/habits/sagas/createHabitSaga.js","firebase/habits/updateHabit.js","redux-modules/habits/sagas/updateHabitSaga.js","firebase/habits/updateHistory.js","redux-modules/habits/sagas/updateHistorySaga.js","redux-modules/habits/sagas/subcribeToHabitsSaga.js","firebase/habits/deleteHabit.js","redux-modules/habits/sagas/deleteHabitSaga.js","firebase/habits/swapHabitOrder.ts","redux-modules/habits/sagas/swapHabitOrderSaga.js","redux-modules/habits/sagas/habitSagas.js","redux-modules/rootSaga.js","redux-modules/store.js","index.tsx"],"names":["formReducer","state","action","type","field","payload","useForm","initialState","useReducer","dispatch","updateField","target","name","value","resetForm","formState","createSliceWithRoutines","reducers","routines","routineInfo","routineReducers","noop","extraReducers","otherArgs","Error","routineNames","Object","keys","reduce","createdRoutines","routineName","createRoutine","promisifiedRoutines","promisifiedRoutinesAcc","routine","promisifyRoutine","slice","createSlice","habitsSlice","updateHabit","habit","id","addHabit","deleteHabit","updateHistory","createHabit","fetchHabit","swapHabit","SUCCESS","useCreateHabit","useDispatch","useCallback","habitName","trigger","sessionSliceSelector","session","isLoggedInSelector","createSelector","sessionSlice","Boolean","user","uid","useLoggedIn","useSelector","FormDialog","useState","open","setOpen","isLoggedIn","handleClickOpen","handleClose","Button","onClick","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","onChange","label","fullWidth","DialogActions","e","useToggle","defaultValue","toggle","setToggle","toggleValue","userSettings","habitIds","setCurrentUser","setUserSettings","login","logout","createUser","useLogout","useIsDarkTheme","useMediaQuery","ThemeProvider","children","prefersDarkMode","theme","React","useMemo","createMuiTheme","palette","calendarStyles","css","getDate","Date","now","padStart","linkStyles","NavBar","props","toggleState","openMenuRef","useRef","isDarkTheme","AppBar","color","position","Toolbar","style","display","flexDirection","justifyContent","alignItems","Typography","variant","noWrap","textDecoration","to","flexGrow","maxWidth","className","fontSize","IconButton","edge","aria-label","ref","aria-haspopup","Popper","anchorEl","current","transition","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","component","MuiLink","process","useLogin","loginInfo","formStyles","SignIn","onSubmit","event","preventDefault","stopPropagation","cx","email","placeholder","required","password","useCreateUser","userInfo","displayName","SignUp","ProfilePage","useAuthPersistence","useEffect","firebase","auth","onAuthStateChanged","userAuth","actions","AuthRoute","path","UnAuthRoute","habitIdsSelector","get","useHabitIds","calculateWeeksInMonth","month","year","numDaysInMonth","getDaysInMonth","firstDayOfMonth","getDay","weeks","currentDay","week","length","i","push","dayContainerStyles","clickableStyles","dayStyles","activeStyles","darkThemeStyles","darkActiveStyles","Week","onDayClick","history","map","day","idx","key","habitsSliceSelector","habits","habitSelector","habitId","useHabit","Calendar","monthNavContainerStyles","navStyles","Months","MonthNav","currentMonth","getMonth","currentYear","getYear","setMonth","setYear","navigateBackwards","newMonth","navigateForwards","size","useDeleteHabit","useUpdateHabit","RenameHabitDialog","isOpen","setIsRenameOpen","DeleteHabitDialog","closeDialog","HabitOptions","iconButtonRef","setIsOpen","closeOptions","renameOpen","deleteOpen","setIsDeleteOpen","Menu","keepMounted","useSwapHabit","firstHabitId","secondHabitId","hoveringStyles","canDropStyles","HabitDropZone","useDrop","accept","canDrop","item","drop","monitor","droppedItemId","collect","isHovering","isOver","dropCollectedProps","cardStyles","fillerStyles","cardHeaderStyles","titleStyles","Habit","order","useDrag","drag","preview","Card","habitContainerStyles","Habits","flipKey","join","flipId","LandingPage","appStyles","App","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","a","signInWithEmailAndPassword","loginUser","loginSaga","put","request","call","success","failure","fulfill","generateUserDocument","userRef","doc","exists","newUserInfo","set","createUserWithEmailAndPassword","updateProfile","createUserSaga","logoutUser","signOut","logoutSaga","currentUserIdSelector","undefined","listen","handleSubscribe","subscribeToUserSettingsSaga","subscriptionChannel","userId","eventChannel","emitter","onSnapshot","querySnapshot","data","select","currentUserId","channel","take","cancelled","close","fork","listenTask","cancel","takeLatest","sessionSagas","takeEvery","TRIGGER","options","userSettingsRef","collection","habitRef","runTransaction","transaction","userSettingsDoc","archived","update","createHabitSaga","newHabit","newData","merge","updateHabitSaga","updatedHabitProperties","newValue","updateHistorySaga","currentValue","subscribeToHabitsSaga","where","docChanges","forEach","change","delete","newHabitIds","filter","deleteHabitSaga","includes","firstHabitIdx","indexOf","secondHabitIdx","swapHabitOrder","swapHabitOrderSaga","habitSagas","rootSaga","sagas","sessionsSaga","routinePromiseWatcherSaga","all","saga","spawn","allSagas","createStore","sagaMiddleware","createSagaMiddleware","middleware","routerMiddleware","store","configureStore","reducer","router","connectRouter","preloadedState","run","createHashHistory","document","addEventListener","ReactDOM","render","StrictMode","HTML5toTouch","CssBaseline","getElementById","URL","href","origin","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.75d68fda.chunk.js","sourcesContent":["import { useReducer } from 'react';\n\nconst SET = 'SET';\nconst RESET = 'RESET';\n\nconst formReducer = (state, action) => {\n  if (action.type === SET) {\n    return { ...state, [action.field]: action.payload };\n  }\n  if (action.type === RESET) {\n    return {};\n  }\n};\n\nfunction useForm(initialState = {}) {\n  const [state, dispatch] = useReducer(formReducer, initialState);\n\n  const updateField = ({ target }) =>\n    dispatch({\n      type: SET,\n      field: target.name,\n      payload: target.value,\n    });\n  const resetForm = () =>\n    dispatch({\n      type: RESET,\n    });\n  return { formState: state, updateField, resetForm };\n}\n\nexport default useForm;\n","import noop from 'lodash/noop';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { createRoutine, promisifyRoutine } from 'redux-saga-routines';\n\nfunction createSliceWithRoutines({\n  name,\n  initialState = {},\n  reducers = {},\n  routines: routineInfo = {},\n  routineReducers = noop,\n  extraReducers = {},\n  ...otherArgs\n}) {\n  if (typeof routineReducers !== 'function') {\n    throw new Error('routineReducers must be a function that returns a reducerMap');\n  }\n  const routineNames = Object.keys(routineInfo);\n\n  const routines = routineNames.reduce((createdRoutines, routineName) => {\n    createdRoutines[routineName] = createRoutine(`${name}/${routineInfo[routineName]}`);\n    return createdRoutines;\n  }, {});\n\n  const promisifiedRoutines = routineNames.reduce((promisifiedRoutinesAcc, routineName) => {\n    const routine = routines[routineName];\n    promisifiedRoutinesAcc[routineName] = promisifyRoutine(routine);\n    return promisifiedRoutinesAcc;\n  }, {});\n  const slice = createSlice({\n    name,\n    reducers,\n    initialState,\n    extraReducers: {\n      ...extraReducers,\n      ...routineReducers(routines),\n    },\n    ...otherArgs,\n  });\n  slice.routines = routines;\n  slice.promisifiedRoutines = promisifiedRoutines;\n  return slice;\n}\nexport default createSliceWithRoutines;\n","import createSliceWithRoutines from 'redux-modules/utils/createSliceWithRoutines';\n\nconst habitsSlice = createSliceWithRoutines({\n  name: 'habits',\n  initialState: {},\n  reducers: {\n    updateHabit: (state, action) => {\n      const { habit, id } = action.payload;\n      state[id] = { ...state[id], ...habit };\n    },\n    addHabit: (state, action) => {\n      const { habit, id } = action.payload;\n      state[id] = habit;\n    },\n    deleteHabit: (state, action) => {\n      const { id } = action.payload;\n      delete state[id];\n    },\n  },\n  routines: {\n    updateHistory: 'UPDATE_HISTORY',\n    createHabit: 'CREATE_HABIT',\n    updateHabit: 'UPDATE_HABIT',\n    deleteHabit: 'DELETE_HABIT',\n    fetchHabit: 'FETCH_HABIT',\n    swapHabit: 'SWAP_HABIT',\n  },\n  routineReducers: (routines) => ({\n    [routines.createHabit.SUCCESS]: (state, action) => {\n      const { habit, id } = action.payload;\n\n      state[id] = habit;\n    },\n  }),\n});\n\nexport default habitsSlice;\n","import habitsSlice from '../habitsSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = habitsSlice;\n\nfunction useCreateHabit() {\n  const dispatch = useDispatch();\n\n  const createUser = useCallback(\n    (formState) => {\n      const { habitName } = formState;\n      dispatch(routines.createHabit.trigger({ habitName }));\n    },\n    [dispatch]\n  );\n\n  return createUser;\n}\n\nexport default useCreateHabit;\n","const sessionSliceSelector = (state) => state.session;\n\nexport default sessionSliceSelector;\n","import { createSelector } from '@reduxjs/toolkit';\nimport sessionSliceSelector from './sessionSliceSelector';\n\nconst isLoggedInSelector = createSelector(sessionSliceSelector, (sessionSlice) =>\n  Boolean(sessionSlice.user.uid)\n);\n\nexport default isLoggedInSelector;\n","import { useSelector } from 'react-redux';\nimport isLoggedInSelector from 'redux-modules/session/selectors/isLoggedInSelector';\n\nconst useLoggedIn = () => {\n  const isLoggedIn = useSelector(isLoggedInSelector);\n\n  return isLoggedIn;\n};\n\nexport default useLoggedIn;\n","import React, { useState, useCallback } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useForm from 'hooks/useForm';\nimport useCreateHabit from 'redux-modules/habits/hooks/useCreateHabit';\nimport useLoggedIn from 'hooks/useLoggedIn';\n\nexport default function FormDialog() {\n  const [open, setOpen] = useState(false);\n  const { formState, updateField, resetForm } = useForm();\n  const createHabit = useCreateHabit();\n  const isLoggedIn = useLoggedIn();\n\n  const handleClickOpen = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  if (!isLoggedIn) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClickOpen}>Create Habit</Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"create-habit-title\">\n        <DialogTitle id=\"create-habit-title\">Create Habit</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"habitName\"\n            name=\"habitName\"\n            value={formState.habitName || ''}\n            onChange={updateField}\n            label=\"Habit Name\"\n            type=\"text\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button\n            onClick={(e) => {\n              createHabit(formState);\n              resetForm();\n              handleClose();\n            }}\n          >\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { useCallback, useState } from 'react';\n\nfunction useToggle(defaultValue = false) {\n  const [toggle, setToggle] = useState(defaultValue);\n\n  const toggleValue = useCallback(() => {\n    setToggle(!toggle);\n  }, [toggle]);\n\n  return [toggle, toggleValue, setToggle];\n}\n\nexport default useToggle;\n","import createSliceWithRoutines from 'redux-modules/utils/createSliceWithRoutines';\n\nconst sessionSlice = createSliceWithRoutines({\n  name: 'session',\n  initialState: {\n    user: {},\n    userSettings: {\n      habitIds: [],\n    },\n  },\n  reducers: {\n    setCurrentUser: (state, action) => {\n      state.user = action.payload.user;\n    },\n    setUserSettings: (state, action) => {\n      state.userSettings = action.payload.userSettings;\n    },\n  },\n  routines: {\n    login: 'LOGIN',\n    logout: 'LOGOUT',\n    createUser: 'CREATE_USER',\n  },\n  routineReducers: (routines) => ({\n    [routines.logout.SUCCESS]: (state) => {\n      state.user = {};\n    },\n    [routines.login.SUCCESS]: (state, action) => {\n      state.user = action.payload.user;\n    },\n    [routines.createUser.SUCCESS]: (state, action) => {\n      state.user = action.payload.user;\n    },\n  }),\n});\n\nexport default sessionSlice;\n","import sessionSlice from '../sessionSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = sessionSlice;\n\nfunction useLogout() {\n  const dispatch = useDispatch();\n\n  const logout = useCallback(() => {\n    dispatch(routines.logout.trigger());\n  }, [dispatch]);\n\n  return logout;\n}\n\nexport default useLogout;\n","import React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { ThemeProvider as MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nexport const useIsDarkTheme = () => {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  return prefersDarkMode;\n};\n\nfunction ThemeProvider({ children }) {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return <MuiThemeProvider theme={theme}>{children}</MuiThemeProvider>;\n}\n\nexport default ThemeProvider;\n","import React, { useRef } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport CreateHabitDialog from 'ui/molecules/dialogs/CreateHabitDialog';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MuiLink from '@material-ui/core/Link';\nimport MenuList from '@material-ui/core/MenuList';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useToggle from 'hooks/useToggle';\nimport useLogout from 'redux-modules/session/hooks/useLogout';\nimport useLoggedIn from 'hooks/useLoggedIn';\nimport { Link } from 'react-router-dom';\nimport { useIsDarkTheme } from '../themeProvider/ThemeProvider';\nimport { css } from 'emotion';\nimport { getDate } from 'date-fns';\n\nconst currentDay = () => {\n  return `${getDate(Date.now())}`.padStart(2, '0');\n};\n\nconst calendarStyles = css`\n  position: relative;\n  ::after {\n    content: '${currentDay()}';\n    position: absolute;\n    left: 10px;\n    top: 10px;\n  }\n`;\n\nconst linkStyles = css`\n  a {\n    color: inherit;\n    text-decoration: none;\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`;\n\nconst NavBar = (props) => {\n  const [toggle, toggleState] = useToggle();\n  const openMenuRef = useRef();\n\n  const isLoggedIn = useLoggedIn();\n  const logout = useLogout();\n\n  const isDarkTheme = useIsDarkTheme();\n\n  return (\n    <AppBar color={isDarkTheme ? 'inherit' : 'primary'} position=\"sticky\">\n      <Toolbar\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Typography variant=\"h6\" noWrap>\n          <Link style={{ color: 'inherit', textDecoration: 'none' }} to=\"/\">\n            Habit Tracker\n          </Link>\n        </Typography>\n        <div\n          style={{\n            flexGrow: 1,\n            maxWidth: '960px',\n          }}\n        />\n        <CreateHabitDialog />\n        <div className={calendarStyles}>\n          <CalendarTodayIcon fontSize=\"large\" />\n        </div>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"account of current user\"\n          ref={openMenuRef}\n          onClick={toggleState}\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <Popper open={toggle} anchorEl={openMenuRef.current} transition>\n          {({ TransitionProps, placement }) => {\n            return (\n              <Grow\n                {...TransitionProps}\n                style={{\n                  transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n                }}\n              >\n                <Paper>\n                  <ClickAwayListener onClickAway={toggleState}>\n                    <>\n                      {!isLoggedIn && (\n                        <MenuList\n                          autoFocusItem={toggle}\n                          id=\"menu-list-grow\"\n                          onKeyDown={toggleState}\n                          className={linkStyles}\n                        >\n                          <MenuItem onClick={toggleState}>\n                            <Link component={MuiLink} to=\"/signin\">\n                              Login\n                            </Link>\n                          </MenuItem>\n                          {process.env.NODE_ENV !== 'production' && (\n                            <MenuItem onClick={toggleState}>\n                              <Link component={MuiLink} to=\"/signup\">\n                                Sign Up\n                              </Link>\n                            </MenuItem>\n                          )}\n                        </MenuList>\n                      )}\n                      {isLoggedIn && (\n                        <MenuList\n                          autoFocusItem={toggle}\n                          id=\"menu-list-grow\"\n                          onKeyDown={toggleState}\n                          className={linkStyles}\n                        >\n                          {/* <MenuItem onClick={toggleState}>\n                            <Link component={MuiLink} to=\"/profile\">\n                              Profile\n                            </Link>\n                          </MenuItem>\n                          <MenuItem onClick={toggleState}>My account</MenuItem> */}\n                          <MenuItem\n                            onClick={() => {\n                              logout();\n                              toggleState();\n                            }}\n                          >\n                            Logout\n                          </MenuItem>\n                        </MenuList>\n                      )}\n                    </>\n                  </ClickAwayListener>\n                </Paper>\n              </Grow>\n            );\n          }}\n        </Popper>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import sessionSlice from '../sessionSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = sessionSlice;\n\nfunction useLogin() {\n  const dispatch = useDispatch();\n\n  const login = useCallback(\n    (loginInfo) => {\n      dispatch(routines.login.trigger(loginInfo));\n    },\n    [dispatch]\n  );\n\n  return login;\n}\n\nexport default useLogin;\n","import React, { useCallback, SyntheticEvent, FunctionComponent } from 'react';\nimport useForm from 'hooks/useForm';\nimport { Link } from 'react-router-dom';\nimport { Button, TextField } from '@material-ui/core';\nimport { css, cx } from 'emotion';\nimport useLogin from 'redux-modules/session/hooks/useLogin';\n\nconst formStyles = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  > * {\n    margin: 5px;\n  }\n`;\n\ntype SignInProps = {\n  className?: string | undefined;\n};\n\nconst SignIn: FunctionComponent<SignInProps> = ({ className }) => {\n  const { formState, updateField } = useForm();\n  const login = useLogin();\n\n  const onSubmit = useCallback(\n    (event: SyntheticEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      login(formState);\n    },\n    [formState, login]\n  );\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} className={cx(formStyles, className)}>\n        Sign In\n        <TextField\n          type=\"email\"\n          label=\"Email Address\"\n          value={formState.email || ''}\n          name=\"email\"\n          placeholder=\"Email Address\"\n          onChange={updateField}\n        />\n        <TextField\n          type=\"password\"\n          label=\"Password\"\n          required\n          name=\"password\"\n          value={formState.password || ''}\n          placeholder=\"Your Password\"\n          onChange={updateField}\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Sign in\n        </Button>\n        <Link to=\"/signup\">Sign up here</Link>\n        <Link to=\"/passwordreset\">Forgot Password?</Link>\n      </form>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import sessionSlice from '../sessionSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = sessionSlice;\n\nfunction useCreateUser() {\n  const dispatch = useDispatch();\n\n  const createUser = useCallback(\n    (userInfo) => {\n      const { displayName, email, password } = userInfo;\n      dispatch(routines.createUser.trigger({ displayName, email, password }));\n    },\n    [dispatch]\n  );\n\n  return createUser;\n}\n\nexport default useCreateUser;\n","import React, { useCallback, SyntheticEvent, FunctionComponent } from 'react';\nimport useForm from 'hooks/useForm';\nimport { Link } from 'react-router-dom';\nimport { Button, TextField } from '@material-ui/core';\nimport { css, cx } from 'emotion';\nimport useCreateUser from 'redux-modules/session/hooks/useCreateUser';\nconst formStyles = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  > * {\n    margin: 10px;\n  }\n`;\n\ntype SignUpProps = {\n  className?: string | undefined;\n};\n\nconst SignUp: FunctionComponent<SignUpProps> = ({ className }) => {\n  const { formState, updateField } = useForm();\n\n  const createUser = useCreateUser();\n\n  const onSubmit = useCallback(\n    (event: SyntheticEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      createUser(formState);\n    },\n    [createUser, formState]\n  );\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} className={cx(formStyles, className)}>\n        Sign Up\n        <TextField\n          type=\"text\"\n          label=\"Display Name\"\n          value={formState.displayName || ''}\n          name=\"displayName\"\n          placeholder=\"Display Name\"\n          onChange={updateField}\n          required\n        />\n        <TextField\n          type=\"email\"\n          label=\"Email Address\"\n          value={formState.email || ''}\n          name=\"email\"\n          placeholder=\"Email Address\"\n          onChange={updateField}\n          required\n        />\n        <TextField\n          type=\"password\"\n          label=\"Password\"\n          required\n          name=\"password\"\n          value={formState.password || ''}\n          placeholder=\"Your Password\"\n          onChange={updateField}\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Sign Up\n        </Button>\n        <Link to=\"/signin\">Sign in here</Link>\n        <Link to=\"/passwordreset\">Forgot Password?</Link>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React from 'react';\n\nfunction ProfilePage() {\n  return <div></div>;\n}\n\nexport default ProfilePage;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\n\nfunction useAuthPersistence() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((userAuth) => {\n      dispatch(sessionSlice.actions.setCurrentUser({ user: userAuth || {} }));\n    });\n  }, [dispatch]);\n}\n\nexport default useAuthPersistence;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport useLoggedIn from 'hooks/useLoggedIn';\n\nfunction AuthRoute({ path, children }) {\n  const isLoggedIn = useLoggedIn();\n\n  if (!isLoggedIn) {\n    return <Redirect to={'/'} />;\n  }\n\n  return <Route path={path}>{children}</Route>;\n}\n\nexport default AuthRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport useLoggedIn from 'hooks/useLoggedIn';\n\nfunction UnAuthRoute({ path, children }) {\n  const isLoggedIn = useLoggedIn();\n\n  if (isLoggedIn) {\n    return <Redirect to={'/'} />;\n  }\n\n  return <Route path={path}>{children}</Route>;\n}\n\nexport default UnAuthRoute;\n","import get from 'lodash/get';\nimport sessionSliceSelector from 'redux-modules/session/selectors/sessionSliceSelector';\nimport { createSelector } from '@reduxjs/toolkit';\n\nconst habitIdsSelector = createSelector([sessionSliceSelector], (session) =>\n  get(session, 'userSettings.habitIds', [])\n);\n\nexport default habitIdsSelector;\n","import { useSelector } from 'react-redux';\nimport habitIdsSelector from '../selectors/habitIdsSelectors';\n\nconst useHabitIds = () => {\n  const habitIds = useSelector(habitIdsSelector);\n\n  return habitIds;\n};\n\nexport default useHabitIds;\n","import { getDay, getDaysInMonth } from 'date-fns';\n\nconst SATURDAY = 6;\n\nfunction calculateWeeksInMonth({ month, year }) {\n  // month is 0-indexed\n  const numDaysInMonth = getDaysInMonth(new Date(year, month));\n  // 0 Sun, 1 Mon, etc.\n  const firstDayOfMonth = getDay(new Date(year, month, 1));\n\n  const weeks = [];\n  let currentDay = 1;\n\n  while (currentDay <= numDaysInMonth) {\n    const week = [];\n\n    if (weeks.length === 0) {\n      // build first week\n      for (let i = 0; i <= SATURDAY; i++) {\n        if (i < firstDayOfMonth) {\n          week.push(-1);\n        } else {\n          week.push(currentDay);\n          currentDay++;\n        }\n      }\n    } else {\n      for (let i = 0; i <= SATURDAY; i++) {\n        if (currentDay <= numDaysInMonth) {\n          week.push(currentDay);\n        } else {\n          week.push(-1);\n        }\n        currentDay++;\n      }\n    }\n    weeks.push(week);\n  }\n\n  return weeks;\n}\n\nexport default calculateWeeksInMonth;\n","import React from 'react';\nimport noop from 'lodash/noop';\nimport { css, cx } from 'emotion';\nimport { useIsDarkTheme } from 'ui/atoms/themeProvider/ThemeProvider';\n\nconst dayContainerStyles = css`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst clickableStyles = css`\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(180, 180, 180);\n  }\n`;\n\nconst dayStyles = css`\n  height: 30px;\n  width: 30px;\n  border-radius: 5px;\n  background-color: rgb(220, 220, 220);\n  margin: 5px;\n`;\n\nconst activeStyles = css`\n  background-color: rgb(51, 192, 255);\n  &:hover {\n    background-color: rgb(51, 192, 255, 0.5);\n  }\n`;\n\nconst darkThemeStyles = css`\n  background-color: #282d33;\n  color: white;\n`;\n\nconst darkActiveStyles = css`\n  background-color: gray;\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n\nfunction Week({ week = [], onDayClick, history }) {\n  const isDarkTheme = useIsDarkTheme();\n\n  return (\n    <div className={cx(dayContainerStyles)}>\n      {week.map((day, idx) => {\n        const onClick = day > 0 ? () => onDayClick && onDayClick(day) : noop;\n\n        const className = cx(\n          dayStyles,\n          isDarkTheme && darkThemeStyles,\n          day > 0 && clickableStyles,\n          history[day] && !isDarkTheme && activeStyles,\n          history[day] && isDarkTheme && darkActiveStyles\n        );\n        return (\n          <div key={`${day}-${idx}`} className={className} onClick={onClick}>\n            {day > 0 ? day : ''}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Week;\n","function habitsSliceSelector(state) {\n  return state.habits;\n}\nexport default habitsSliceSelector;\n","import { createSelector } from '@reduxjs/toolkit';\nimport habitsSliceSelector from './habitsSliceSelector';\n\nconst habitSelector = (habitId) =>\n  createSelector([habitsSliceSelector], (habits) => habits[habitId]);\n\nexport default habitSelector;\n","import { useSelector } from 'react-redux';\nimport habitSelector from '../selectors/habitSelector';\n\nconst useHabit = (habitId) => {\n  const habit = useSelector(habitSelector(habitId));\n\n  return habit;\n};\n\nexport default useHabit;\n","import React, { useMemo, useCallback } from 'react';\nimport get from 'lodash/get';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport calculateWeeksInMonth from './calculateWeeksInMonth';\nimport Week from './Week';\nimport { useDispatch } from 'react-redux';\nimport useHabit from 'redux-modules/habits/hooks/useHabit';\n\nfunction Calendar({ month, year, habitId }) {\n  const weeks = useMemo(() => calculateWeeksInMonth({ month, year }), [month, year]);\n  const dispatch = useDispatch();\n\n  const onDayClick = useCallback(\n    (day) => {\n      dispatch(habitsSlice.routines.updateHistory.trigger({ day, month, year, habitId }));\n    },\n    [dispatch, habitId, month, year]\n  );\n\n  const { history = {} } = useHabit(habitId);\n\n  return (\n    <div>\n      {weeks.map((week, idx) => {\n        return (\n          <Week\n            week={week}\n            key={idx}\n            onDayClick={onDayClick}\n            history={get(history, [year, month], {})}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Calendar;\n","import React, { useCallback, useState } from 'react';\nimport { getMonth, getYear } from 'date-fns';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForwardIos';\nimport { css } from 'emotion';\n\nconst monthNavContainerStyles = css`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst navStyles = css`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Months = [\n  { name: 'January' },\n  { name: 'February' },\n  { name: 'March' },\n  { name: 'April' },\n  { name: 'May' },\n  { name: 'June' },\n  { name: 'July' },\n  { name: 'August' },\n  { name: 'September' },\n  { name: 'October' },\n  { name: 'November' },\n  { name: 'December' },\n];\n\nfunction MonthNav({\n  children,\n  currentMonth = getMonth(Date.now()),\n  currentYear = getYear(Date.now()),\n}) {\n  const [month, setMonth] = useState(currentMonth);\n  const [year, setYear] = useState(currentYear);\n\n  const navigateBackwards = useCallback(() => {\n    let newMonth = month - 1;\n    if (newMonth < 0) {\n      newMonth = 11;\n      let newYear = year - 1;\n      setYear(newYear);\n    }\n    setMonth(newMonth);\n  }, [month, year]);\n\n  const navigateForwards = useCallback(() => {\n    let newMonth = month + 1;\n    if (newMonth > 11) {\n      newMonth = 0;\n      let newYear = year + 1;\n      setYear(newYear);\n    }\n    setMonth(newMonth);\n  }, [month, year]);\n\n  return (\n    <div className={monthNavContainerStyles}>\n      <div className={navStyles}>\n        <IconButton size=\"small\" onClick={navigateBackwards}>\n          <ArrowBackIcon />\n        </IconButton>\n        <IconButton size=\"small\" onClick={navigateForwards}>\n          <ArrowForwardIcon />\n        </IconButton>\n        <Typography variant=\"h6\" noWrap>\n          {Months[month].name} {year}\n        </Typography>\n      </div>\n      <div>{children({ month, year })}</div>\n    </div>\n  );\n}\n\nexport default MonthNav;\n","import habitsSlice from '../habitsSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = habitsSlice;\n\nfunction useDeleteHabit(habitId) {\n  const dispatch = useDispatch();\n\n  const deleteHabit = useCallback(() => {\n    dispatch(routines.deleteHabit.trigger({ habitId }));\n  }, [dispatch, habitId]);\n\n  return deleteHabit;\n}\n\nexport default useDeleteHabit;\n","import habitsSlice from '../habitsSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = habitsSlice;\n\nfunction useUpdateHabit() {\n  const dispatch = useDispatch();\n\n  const updateHabit = useCallback(\n    ({ id, habit: { name } }) => {\n      dispatch(routines.updateHabit.trigger({ id, habit: { name } }));\n    },\n    [dispatch]\n  );\n\n  return updateHabit;\n}\n\nexport default useUpdateHabit;\n","import React, { FunctionComponent } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport useForm from 'hooks/useForm';\nimport useHabit from 'redux-modules/habits/hooks/useHabit';\nimport useUpdateHabit from 'redux-modules/habits/hooks/useUpdateHabit';\n\ntype RenameHabitDialogProps = {\n  habitId: string;\n  isOpen: boolean;\n  setIsRenameOpen: Function;\n};\n\nconst RenameHabitDialog: FunctionComponent<RenameHabitDialogProps> = ({\n  habitId,\n  isOpen,\n  setIsRenameOpen,\n}) => {\n  const habit: { name: string; history: object | undefined } = useHabit(habitId);\n  const { formState, updateField, resetForm } = useForm();\n  const updateHabit = useUpdateHabit();\n  return (\n    <Dialog open={isOpen} onClose={() => setIsRenameOpen(false)} aria-labelledby=\"update-dialog\">\n      <DialogTitle id=\"update-dialog\">Update Habit Name - {habit.name}</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"habitName\"\n          name=\"habitName\"\n          value={formState.habitName || ''}\n          onChange={updateField}\n          label=\"Habit Name\"\n          type=\"text\"\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setIsRenameOpen(false)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={(e) => {\n            updateHabit({ id: habitId, habit: { name: formState.habitName } });\n            resetForm();\n            setIsRenameOpen(false);\n          }}\n          color=\"primary\"\n        >\n          Update Name\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default RenameHabitDialog;\n","import React, { FunctionComponent } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\ntype DeleteHabitDialogProps = {\n  isOpen: boolean;\n  deleteHabit: Function;\n  closeDialog: Function;\n};\n\nconst DeleteHabitDialog: FunctionComponent<DeleteHabitDialogProps> = ({\n  isOpen,\n  deleteHabit,\n  closeDialog,\n}) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={() => {\n        closeDialog();\n      }}\n      aria-labelledby=\"update-dialog\"\n    >\n      <DialogTitle id=\"update-dialog\">Delete Habit</DialogTitle>\n      <DialogContent>Are you sure you want to delete this habit?</DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            closeDialog();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={(e) => {\n            deleteHabit();\n            closeDialog();\n          }}\n        >\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeleteHabitDialog;\n","import React, { FunctionComponent, useState, useRef, MutableRefObject } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport useDeleteHabit from 'redux-modules/habits/hooks/useDeleteHabit';\nimport useHabit from 'redux-modules/habits/hooks/useHabit';\nimport RenameHabitDialog from '../dialogs/RenameHabitDialog';\nimport DeleteHabitDialog from '../dialogs/DeleteHabitDialog';\n\ntype HabitOptionProps = {\n  habitId: string;\n};\n\nconst HabitOptions: FunctionComponent<HabitOptionProps> = ({ habitId }) => {\n  const habit: { name: string; history: object | undefined } = useHabit(habitId);\n\n  const iconButtonRef = useRef() as MutableRefObject<HTMLButtonElement>;\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const openOptions = () => setIsOpen(true);\n  const closeOptions = () => setIsOpen(false);\n\n  const [renameOpen, setIsRenameOpen] = useState(false);\n  const [deleteOpen, setIsDeleteOpen] = useState(false);\n\n  const deleteHabit = useDeleteHabit(habitId);\n\n  if (!habit) {\n    return null;\n  }\n  return (\n    <>\n      <IconButton\n        ref={iconButtonRef}\n        edge=\"end\"\n        aria-label=\"options for habit\"\n        onClick={openOptions}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={iconButtonRef.current}\n        keepMounted\n        open={isOpen}\n        onClose={closeOptions}\n      >\n        <MenuItem\n          onClick={() => {\n            setIsRenameOpen(true);\n            closeOptions();\n          }}\n        >\n          Rename\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            setIsDeleteOpen(true);\n            closeOptions();\n          }}\n        >\n          Delete\n        </MenuItem>\n      </Menu>\n      <RenameHabitDialog isOpen={renameOpen} habitId={habitId} setIsRenameOpen={setIsRenameOpen} />\n      <DeleteHabitDialog\n        isOpen={deleteOpen}\n        deleteHabit={deleteHabit}\n        closeDialog={() => setIsDeleteOpen(false)}\n      />\n    </>\n  );\n};\n\nexport default HabitOptions;\n","import habitsSlice from '../habitsSlice';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst { routines } = habitsSlice;\n\nfunction useSwapHabit() {\n  const dispatch = useDispatch();\n\n  const swapHabit = useCallback(\n    ({ firstHabitId, secondHabitId }) => {\n      dispatch(routines.swapHabit.trigger({ firstHabitId, secondHabitId }));\n    },\n    [dispatch]\n  );\n\n  return swapHabit;\n}\n\nexport default useSwapHabit;\n","import React, { FunctionComponent } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { HabitDragItem } from './Habit';\nimport { css, cx } from 'emotion';\nimport useSwapHabit from 'redux-modules/habits/hooks/useSwapHabit';\n\nconst hoveringStyles = css`\n  opacity: 0.8;\n`;\n\nconst canDropStyles = css`\n  opacity: 0.5;\n`;\n\ntype Props = {\n  habitId: string;\n};\n\nconst HabitDropZone: FunctionComponent<Props> = (props) => {\n  const { habitId } = props;\n  const swapHabit = useSwapHabit();\n  const [dropCollectedProps, drop] = useDrop({\n    accept: 'habit',\n    canDrop: (item: HabitDragItem) => {\n      return item.type === 'habit' && item.id !== habitId;\n    },\n    drop: (item: HabitDragItem, monitor) => {\n      const { id: droppedItemId, type: droppedItemType } = item;\n      if (droppedItemType === 'habit') {\n        // habit dropped, dispatch action to reorder habits\n        swapHabit({ firstHabitId: droppedItemId, secondHabitId: habitId });\n      }\n    },\n    collect: (monitor) => ({\n      canDrop: monitor.canDrop(),\n      isHovering: monitor.isOver(),\n    }),\n  });\n\n  return (\n    <div\n      ref={drop}\n      className={cx({\n        [canDropStyles]: dropCollectedProps.canDrop,\n        [hoveringStyles]: dropCollectedProps.isHovering && dropCollectedProps.canDrop,\n      })}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default HabitDropZone;\n","import React, { FunctionComponent } from 'react';\nimport Calendar from 'ui/molecules/calendar/Calendar';\nimport Card from '@material-ui/core/Card';\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\nimport IconButton from '@material-ui/core/IconButton';\nimport MonthNav from 'ui/molecules/calendar/MonthNav';\nimport Typography from '@material-ui/core/Typography';\nimport useHabit from 'redux-modules/habits/hooks/useHabit';\nimport { css } from 'emotion';\nimport { useDrag } from 'react-dnd';\nimport HabitOptions from './HabitOptions';\nimport HabitDropZone from './HabitDropZone';\n\nconst cardStyles: string = css`\n  margin: 8px;\n  padding: 16px;\n  text-transform: capitalize;\n  position: relative;\n`;\n\nconst fillerStyles: string = css`\n  flex-grow: 1;\n`;\n\nconst cardHeaderStyles: string = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst titleStyles: string = css`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  max-width: 18ch;\n`;\n\ntype HabitProps = {\n  habitId: string;\n  order: number;\n};\n\nexport type HabitDragItem = {\n  type: string;\n  id: string;\n  order: number;\n};\n\nconst Habit: FunctionComponent<HabitProps> = ({ habitId, order }) => {\n  const habit: { name: string; history: object | undefined } = useHabit(habitId);\n\n  const [, drag, preview] = useDrag({\n    item: { id: habitId, type: 'habit', order },\n  });\n\n  if (!habit) {\n    return null;\n  }\n  const { name } = habit;\n  return (\n    <HabitDropZone habitId={habitId}>\n      <Card className={cardStyles} ref={preview}>\n        <div className={cardHeaderStyles}>\n          <IconButton\n            ref={drag}\n            edge=\"start\"\n            aria-label=\"drag drop indicator for reordering habits\"\n          >\n            <DragIndicatorIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={titleStyles}>\n            {name}\n          </Typography>\n          <div className={fillerStyles} />\n          <HabitOptions habitId={habitId} />\n        </div>\n        <MonthNav>\n          {({ month, year }: { month: number; year: number }) => (\n            <Calendar month={month} year={year} habitId={habitId} />\n          )}\n        </MonthNav>\n      </Card>\n    </HabitDropZone>\n  );\n};\n\nexport default Habit;\n","import React, { FunctionComponent } from 'react';\nimport useHabitIds from 'redux-modules/habits/hooks/useHabitIds';\nimport Habit from '../habit/Habit';\nimport { css } from 'emotion';\nimport { Flipper, Flipped } from 'react-flip-toolkit';\n\nconst habitContainerStyles = css`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  max-width: 1000px;\n  align-items: center;\n  @media only screen and (max-width: 1000px) {\n    justify-content: center;\n  }\n`;\n\nconst Habits: FunctionComponent = () => {\n  const habitIds = useHabitIds();\n  return (\n    <>\n      {habitIds.length > 0 && (\n        <Flipper flipKey={habitIds.join('')}>\n          <div className={habitContainerStyles}>\n            {habitIds.map((habitId: string, idx: number) => {\n              return (\n                <Flipped key={habitId} flipId={habitId}>\n                  {/* <Flipped/> needs a div child */}\n                  <div>\n                    <Habit habitId={habitId} order={idx} />\n                  </div>\n                </Flipped>\n              );\n            })}\n          </div>\n        </Flipper>\n      )}\n    </>\n  );\n};\n\nexport default Habits;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nfunction LandingPage() {\n  return (\n    <div>\n      <Typography variant=\"h1\">Habit Tracker</Typography>\n      <Typography variant=\"h4\">A Simple Habit Tracker App</Typography>\n      <Typography variant=\"h5\">Login To Begin</Typography>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport NavBar from 'ui/atoms/navigation/NavBar';\nimport SignIn from 'ui/pages/session/SignIn';\nimport SignUp from 'ui/pages/session/SignUp';\nimport ProfilePage from 'ui/pages/ProfilePage';\nimport useAuthPersistence from 'hooks/useAuthPersistence';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport AuthRoute from 'ui/atoms/route/AuthRoute';\nimport UnAuthRoute from 'ui/atoms/route/UnAuthRoute';\nimport { css } from 'emotion';\nimport useLoggedIn from 'hooks/useLoggedIn';\nimport Habits from 'ui/molecules/habits/Habits';\nimport LandingPage from 'ui/pages/LandingPage';\n\nconst appStyles = css`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nfunction App() {\n  useAuthPersistence();\n  const isLoggedIn = useLoggedIn();\n  return (\n    <>\n      <NavBar />\n      <div>\n        <Switch>\n          <UnAuthRoute path=\"/signin\">\n            <SignIn />\n          </UnAuthRoute>\n          <UnAuthRoute path=\"/signup\">\n            <SignUp />\n          </UnAuthRoute>\n          <UnAuthRoute path=\"/passwordreset\">\n            <div>WIP</div>\n          </UnAuthRoute>\n          <AuthRoute path=\"/profile\">\n            <ProfilePage />\n          </AuthRoute>\n          <Route path=\"/\">\n            <div className={appStyles}>{isLoggedIn ? <Habits /> : <LandingPage />}</div>\n          </Route>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n","import { auth } from '../firebase';\n\nasync function loginUser({ email, password }) {\n  return await auth.signInWithEmailAndPassword(email, password);\n}\n\nexport default loginUser;\n","import { put, call } from 'redux-saga/effects';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\nimport loginUser from 'firebase/users/loginUser';\nimport { push } from 'connected-react-router';\n\nfunction* loginSaga(action) {\n  const { email, password } = action.payload;\n  try {\n    yield put(sessionSlice.routines.login.request());\n\n    const { user } = yield call(loginUser, { email, password });\n\n    yield put(\n      sessionSlice.routines.login.success({\n        user,\n      })\n    );\n    yield put(push('/'));\n  } catch (e) {\n    console.error(e);\n    yield put(sessionSlice.routines.login.failure(e));\n  } finally {\n    yield put(sessionSlice.routines.login.fulfill());\n  }\n}\n\nexport default loginSaga;\n","import { firestore, auth } from '../firebase';\n\nasync function generateUserDocument(user) {\n  if (!user) throw new Error('User does not exist');\n\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const newUserInfo = {\n      habitIds: [],\n    };\n\n    await userRef.set(newUserInfo);\n\n    return newUserInfo;\n  }\n}\n\nasync function createUser({ email, password, displayName }) {\n  const { user } = await auth.createUserWithEmailAndPassword(email, password);\n\n  user.updateProfile({\n    displayName,\n  });\n\n  generateUserDocument(user);\n\n  return user;\n}\n\nexport default createUser;\n","import { put, call } from 'redux-saga/effects';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\nimport createUser from 'firebase/users/createUser';\nimport { push } from 'connected-react-router';\n\nfunction* createUserSaga(action) {\n  const { displayName, email, password } = action.payload;\n\n  try {\n    yield put(sessionSlice.routines.createUser.request());\n\n    const user = yield call(createUser, { email, password, displayName });\n\n    yield put(\n      sessionSlice.routines.createUser.success({\n        user,\n      })\n    );\n\n    yield put(push('/'));\n  } catch (e) {\n    console.error(e);\n    yield put(sessionSlice.routines.createUser.failure(e));\n  } finally {\n    yield put(sessionSlice.routines.createUser.fulfill());\n  }\n}\n\nexport default createUserSaga;\n","import { auth } from '../firebase';\n\nfunction logoutUser() {\n  return auth.signOut();\n}\n\nexport default logoutUser;\n","import { put, call } from 'redux-saga/effects';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\nimport logoutUser from 'firebase/users/logoutUser';\n\nfunction* logoutSaga() {\n  try {\n    yield put(sessionSlice.routines.logout.request());\n\n    yield call(logoutUser);\n    yield put(sessionSlice.routines.logout.success());\n  } catch (e) {\n    console.error(e);\n    yield put(sessionSlice.routines.logout.failure(e));\n  } finally {\n    yield put(sessionSlice.routines.logout.fulfill());\n  }\n}\n\nexport default logoutSaga;\n","import { createSelector } from '@reduxjs/toolkit';\nimport get from 'lodash/get';\nimport sessionSliceSelector from './sessionSliceSelector';\n\nconst currentUserIdSelector = createSelector(sessionSliceSelector, (session) => {\n  return get(session, 'user.uid', undefined);\n});\n\nexport default currentUserIdSelector;\n","import { call, cancel, cancelled, fork, put, select, take, takeLatest } from 'redux-saga/effects';\nimport { eventChannel } from 'redux-saga';\nimport { firestore } from '../../../firebase/firebase';\nimport currentUserIdSelector from '../selectors/currentUserIdSelector';\nimport sessionSlice from '../sessionSlice';\n\nfunction subscriptionChannel({ userId }) {\n  return eventChannel((emitter) => {\n    const userSettingsRef = firestore.doc(`users/${userId}`);\n\n    const unsubscribe = userSettingsRef.onSnapshot((querySnapshot) => {\n      emitter({\n        data: querySnapshot.data(),\n        userId,\n      });\n    });\n\n    return unsubscribe;\n  });\n}\n\nexport function* listen() {\n  const currentUserId = yield select(currentUserIdSelector);\n\n  const channel = yield call(subscriptionChannel, { userId: currentUserId });\n\n  try {\n    while (true) {\n      const { data } = yield take(channel);\n\n      yield put(sessionSlice.actions.setUserSettings({ userSettings: data }));\n    }\n  } finally {\n    if (yield cancelled()) channel.close();\n  }\n}\n\nexport function* handleSubscribe(action) {\n  const listenTask = yield fork(listen, action);\n\n  const unsubscribed = yield take(sessionSlice.routines.logout.SUCCESS);\n\n  if (unsubscribed.type === sessionSlice.routines.logout.SUCCESS) {\n    yield cancel(listenTask);\n  }\n}\n\nexport function* subscribeToUserSettingsSaga() {\n  yield takeLatest(\n    [\n      sessionSlice.actions.setCurrentUser,\n      sessionSlice.routines.login.SUCCESS,\n      sessionSlice.routines.createUser.SUCCESS,\n    ],\n    handleSubscribe\n  );\n}\n","import { fork, takeEvery } from 'redux-saga/effects';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\nimport loginSaga from './loginSaga';\nimport createUserSaga from './createUserSaga';\nimport logoutSaga from './logoutSaga';\nimport { subscribeToUserSettingsSaga } from './subcribeToUserSettingsSaga';\n\nfunction* sessionSagas() {\n  yield takeEvery(sessionSlice.routines.login.TRIGGER, loginSaga);\n  yield takeEvery(sessionSlice.routines.logout.TRIGGER, logoutSaga);\n  yield takeEvery(sessionSlice.routines.createUser.TRIGGER, createUserSaga);\n  yield fork(subscribeToUserSettingsSaga);\n}\n\nexport default sessionSagas;\n","import { firestore } from '../firebase';\n\nasync function createHabit({ userId, habitName, options = {} }) {\n  const userSettingsRef = firestore.collection('users').doc(userId);\n\n  const habitRef = firestore.collection('habits').doc();\n  const habitId = habitRef.id;\n\n  await firestore.runTransaction(async (transaction) => {\n    const userSettingsDoc = await transaction.get(userSettingsRef);\n    const userSettings = userSettingsDoc.data();\n\n    transaction.set(habitRef, { name: habitName, userId, archived: false, ...options });\n\n    transaction.update(userSettingsRef, { habitIds: [...userSettings.habitIds, habitId] });\n  });\n\n  return [habitId, (await firestore.collection('habits').doc(habitId).get()).data()];\n}\n\nexport default createHabit;\n","import { call, put, select } from 'redux-saga/effects';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport currentUserIdSelector from 'redux-modules/session/selectors/currentUserIdSelector';\nimport createHabit from 'firebase/habits/createHabit';\n\nfunction* createHabitSaga(action) {\n  const { habitName, options = {} } = action.payload;\n  const currentUserId = yield select(currentUserIdSelector);\n\n  try {\n    yield put(habitsSlice.routines.createHabit.request());\n    const [habitId, newHabit] = yield call(createHabit, {\n      userId: currentUserId,\n      habitName,\n      options,\n    });\n\n    yield put(habitsSlice.routines.createHabit.success({ habit: newHabit, id: habitId }));\n  } catch (e) {\n    console.error(e);\n    yield put(habitsSlice.routines.createHabit.failure(e));\n  } finally {\n    yield put(habitsSlice.routines.createHabit.fulfill());\n  }\n}\n\nexport default createHabitSaga;\n","import { firestore } from '../firebase';\n\nasync function updateHabit({ id, habit }) {\n  const habitRef = firestore.collection('habits').doc(id);\n\n  const newData = {\n    ...habit,\n  };\n\n  return await habitRef.set(newData, { merge: true });\n}\n\nexport default updateHabit;\n","import { call, put } from 'redux-saga/effects';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport updateHabit from 'firebase/habits/updateHabit';\n\nfunction* updateHabitSaga(action) {\n  const { id, habit } = action.payload;\n\n  try {\n    yield put(habitsSlice.routines.updateHabit.request());\n    yield call(updateHabit, {\n      id,\n      habit,\n    });\n\n    yield put(habitsSlice.routines.updateHabit.success({ id, updatedHabitProperties: habit }));\n  } catch (e) {\n    console.error(e);\n    yield put(habitsSlice.routines.updateHabit.failure(e));\n  } finally {\n    yield put(habitsSlice.routines.updateHabit.fulfill());\n  }\n}\n\nexport default updateHabitSaga;\n","import { firestore } from '../firebase';\n\nasync function updateHistory({ year, month, day, habitId, newValue }) {\n  const habitRef = firestore.collection('habits').doc(habitId);\n\n  const newData = {\n    history: {\n      [year]: {\n        [month]: {\n          [day]: newValue,\n        },\n      },\n    },\n  };\n\n  return await habitRef.set(newData, { merge: true });\n}\n\nexport default updateHistory;\n","import { call, put, select } from 'redux-saga/effects';\nimport get from 'lodash/get';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport updateHistory from 'firebase/habits/updateHistory';\nimport habitSelector from '../selectors/habitSelector';\n\nfunction* updateHistorySaga(action) {\n  const { day, month, year, habitId } = action.payload;\n\n  try {\n    yield put(habitsSlice.routines.updateHistory.request());\n    const habit = yield select(habitSelector(habitId));\n\n    const { history = {} } = habit;\n\n    const currentValue = get(history, [year, month, day], false);\n\n    yield call(updateHistory, { year, month, day, habitId, newValue: !currentValue });\n\n    yield put(habitsSlice.routines.updateHistory.success());\n  } catch (e) {\n    console.error(e);\n    yield put(habitsSlice.routines.updateHistory.failure(e));\n  } finally {\n    yield put(habitsSlice.routines.updateHistory.fulfill());\n  }\n}\n\nexport default updateHistorySaga;\n","import { call, cancel, cancelled, fork, put, select, take, takeLatest } from 'redux-saga/effects';\nimport { eventChannel } from 'redux-saga';\nimport { firestore } from '../../../firebase/firebase';\nimport habitsSlice from '../habitsSlice';\nimport sessionSlice from 'redux-modules/session/sessionSlice';\nimport currentUserIdSelector from 'redux-modules/session/selectors/currentUserIdSelector';\n\nfunction subscriptionChannel({ userId }) {\n  return eventChannel((emitter) => {\n    const habitsRef = firestore\n      .collection('habits')\n      .where('userId', '==', userId)\n      .where('archived', '==', false);\n\n    const unsubscribe = habitsRef.onSnapshot((querySnapshot) => {\n      querySnapshot.docChanges().forEach((change) => {\n        emitter({\n          type: change.type,\n          data: change.doc.data(),\n          id: change.doc.id,\n        });\n      });\n    });\n\n    return unsubscribe;\n  });\n}\n\nexport function* listen(action) {\n  const currentUserId = yield select(currentUserIdSelector);\n\n  const channel = yield call(subscriptionChannel, { userId: currentUserId });\n\n  try {\n    while (true) {\n      const { data: habit, id, type } = yield take(channel);\n\n      switch (type) {\n        case 'added': {\n          yield put(habitsSlice.actions.addHabit({ habit, id }));\n          break;\n        }\n        case 'modified': {\n          yield put(habitsSlice.actions.updateHabit({ habit, id }));\n          break;\n        }\n        case 'removed': {\n          yield put(habitsSlice.actions.deleteHabit({ habit, id }));\n          break;\n        }\n        default:\n          break;\n      }\n    }\n  } finally {\n    if (yield cancelled()) channel.close();\n  }\n}\n\nexport function* handleSubscribe(action) {\n  const listenTask = yield fork(listen, action);\n  const unsubscribed = yield take(sessionSlice.routines.logout.SUCCESS);\n\n  if (unsubscribed.type === sessionSlice.routines.logout.SUCCESS) {\n    yield cancel(listenTask);\n  }\n}\n\nfunction* subscribeToHabitsSaga() {\n  yield takeLatest(\n    [\n      sessionSlice.actions.setCurrentUser,\n      sessionSlice.routines.login.SUCCESS,\n      sessionSlice.routines.createUser.SUCCESS,\n    ],\n    handleSubscribe\n  );\n}\n\nexport default subscribeToHabitsSaga;\n","import { firestore } from '../firebase';\n\nasync function deleteHabit({ userId, habitId }) {\n  const userSettingsRef = firestore.collection('users').doc(userId);\n  const habitRef = firestore.collection('habits').doc(habitId);\n\n  return await firestore.runTransaction(async (transaction) => {\n    const userSettingsDoc = await transaction.get(userSettingsRef);\n    const userSettings = userSettingsDoc.data();\n\n    transaction.delete(habitRef);\n\n    const newHabitIds = userSettings.habitIds.filter((id) => id !== habitId);\n\n    transaction.update(userSettingsRef, { habitIds: newHabitIds });\n  });\n}\n\nexport default deleteHabit;\n","import { call, put, select } from 'redux-saga/effects';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport currentUserIdSelector from 'redux-modules/session/selectors/currentUserIdSelector';\nimport deleteHabit from 'firebase/habits/deleteHabit';\n\nfunction* deleteHabitSaga(action) {\n  const { habitId } = action.payload;\n  const currentUserId = yield select(currentUserIdSelector);\n\n  try {\n    yield put(habitsSlice.routines.deleteHabit.request());\n\n    yield call(deleteHabit, {\n      userId: currentUserId,\n      habitId,\n    });\n\n    yield put(habitsSlice.routines.deleteHabit.success({ id: habitId }));\n  } catch (e) {\n    console.error(e);\n    yield put(habitsSlice.routines.deleteHabit.failure(e));\n  } finally {\n    yield put(habitsSlice.routines.deleteHabit.fulfill());\n  }\n}\n\nexport default deleteHabitSaga;\n","import { firestore } from '../firebase';\n\nasync function swapHabitOrder({\n  userId,\n  firstHabitId,\n  secondHabitId,\n}: {\n  userId: string;\n  firstHabitId: string;\n  secondHabitId: string;\n}) {\n  const userSettingsRef = firestore.collection('users').doc(userId);\n\n  return await firestore.runTransaction(async (transaction) => {\n    const userSettingsDoc = await transaction.get(userSettingsRef);\n    const userSettings = userSettingsDoc.data();\n\n    if (\n      !userSettings ||\n      !userSettings.habitIds.includes(firstHabitId) ||\n      !userSettings.habitIds.includes(secondHabitId)\n    ) {\n      throw new Error('habit does not exist, cannot move the habit');\n    }\n\n    const newHabitIds = [...userSettings.habitIds];\n    const firstHabitIdx = newHabitIds.indexOf(firstHabitId);\n    const secondHabitIdx = newHabitIds.indexOf(secondHabitId);\n\n    // swap IDs in arr\n    newHabitIds[firstHabitIdx] = secondHabitId;\n    newHabitIds[secondHabitIdx] = firstHabitId;\n\n    await transaction.update(userSettingsRef, { habitIds: newHabitIds });\n\n    return newHabitIds;\n  });\n}\n\nexport default swapHabitOrder;\n","import { call, put, select } from 'redux-saga/effects';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport currentUserIdSelector from 'redux-modules/session/selectors/currentUserIdSelector';\nimport swapHabitOrder from 'firebase/habits/swapHabitOrder';\n\nfunction* swapHabitOrderSaga(action) {\n  const { firstHabitId, secondHabitId } = action.payload;\n  const currentUserId = yield select(currentUserIdSelector);\n\n  try {\n    yield put(habitsSlice.routines.swapHabit.request());\n    const habitIds = yield call(swapHabitOrder, {\n      userId: currentUserId,\n      firstHabitId,\n      secondHabitId,\n    });\n\n    yield put(habitsSlice.routines.swapHabit.success({ habitIds }));\n  } catch (e) {\n    console.error(e);\n    yield put(habitsSlice.routines.swapHabit.failure(e));\n  } finally {\n    yield put(habitsSlice.routines.swapHabit.fulfill());\n  }\n}\n\nexport default swapHabitOrderSaga;\n","import { takeEvery, fork } from 'redux-saga/effects';\nimport habitsSlice from 'redux-modules/habits/habitsSlice';\nimport createHabitSaga from './createHabitSaga';\nimport updateHabitSaga from './updateHabitSaga';\nimport updateHistorySaga from './updateHistorySaga';\nimport subscribeToHabitsSaga from './subcribeToHabitsSaga';\nimport deleteHabitSaga from './deleteHabitSaga';\nimport swapHabitOrderSaga from './swapHabitOrderSaga';\n\nfunction* habitSagas() {\n  yield takeEvery(habitsSlice.routines.createHabit.TRIGGER, createHabitSaga);\n  yield takeEvery(habitsSlice.routines.updateHabit.TRIGGER, updateHabitSaga);\n  yield takeEvery(habitsSlice.routines.updateHistory.TRIGGER, updateHistorySaga);\n  yield takeEvery(habitsSlice.routines.deleteHabit.TRIGGER, deleteHabitSaga);\n  yield takeEvery(habitsSlice.routines.swapHabit.TRIGGER, swapHabitOrderSaga);\n  yield fork(subscribeToHabitsSaga);\n}\n\nexport default habitSagas;\n","import { all, call, spawn } from 'redux-saga/effects';\nimport sessionsSaga from './session/sagas/sessionSagas';\nimport habitSagas from './habits/sagas/habitSagas';\nimport { routinePromiseWatcherSaga } from 'redux-saga-routines';\n\nfunction* rootSaga() {\n  const sagas = [sessionsSaga, habitSagas, routinePromiseWatcherSaga];\n\n  yield all(\n    sagas.map((saga) =>\n      spawn(function* allSagas() {\n        while (true) {\n          try {\n            yield call(saga);\n            break;\n          } catch (e) {\n            console.error(e);\n          }\n        }\n      })\n    )\n  );\n}\n\nexport default rootSaga;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './rootSaga';\nimport sessionSlice from './session/sessionSlice';\nimport habitsSlice from './habits/habitsSlice';\n\nconst createStore = ({ initialState = {}, history }) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = [sagaMiddleware, routerMiddleware(history)];\n\n  const store = configureStore({\n    reducer: {\n      session: sessionSlice.reducer,\n      habits: habitsSlice.reducer,\n      router: connectRouter(history),\n    },\n    middleware,\n    preloadedState: initialState,\n  });\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nexport default createStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport createStore from 'redux-modules/store';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport HTML5toTouch from 'react-dnd-multi-backend/dist/esm/HTML5toTouch';\nimport ThemeProvider from 'ui/atoms/themeProvider/ThemeProvider';\nimport { createHashHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { DndProvider } from 'react-dnd-multi-backend';\nimport { Provider } from 'react-redux';\n\nconst history = createHashHistory();\n\nfunction initApp() {\n  const store = createStore({ history });\n  return ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <DndProvider options={HTML5toTouch}>\n          <ConnectedRouter history={history}>\n            <ThemeProvider>\n              <CssBaseline />\n              <App />\n            </ThemeProvider>\n          </ConnectedRouter>\n        </DndProvider>\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\ndocument.addEventListener('DOMContentLoaded', initApp);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === 'production') {\n  serviceWorker.register();\n}\n"],"sourceRoot":""}